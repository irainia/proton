syntax = "proto3";
package odpf.optimus.plugins;

option go_package = "github.com/odpf/proton/optimus";
option java_multiple_files = true;
option java_package = "io.odpf.proton.optimus.plugins";
option java_outer_classname = "CLIProto";

import "odpf/optimus/plugins/base.proto";

// CLI must be implemented to interact with users via optimus cli
service CLI {
    // GetQuestions list down all the cli inputs required to generate spec files
    // name used for question will be directly mapped to DefaultConfig() parameters
    rpc GetQuestions(GetQuestions.Request) returns (GetQuestions.Response);
    rpc ValidateQuestion(ValidateQuestion.Request) returns (ValidateQuestion.Response);


    // DefaultConfig are a set of configuration which will be embedded in job
    // specification. These configs can be requested by the docker container before
    // execution
    // It will be generated based on results of GetQuestions from user, it also inherit
    // its parent config if any
    // if DryRun is true in PluginOptions, should not throw error for missing inputs
    rpc DefaultConfig(DefaultConfig.Request) returns (DefaultConfig.Response);

    // DefaultAssets are a set of files which will be embedded in job
    // specification in assets folder. These configs can be requested by the
    // docker container before execution.
    // if DryRun is true in PluginOptions, should not throw error for missing inputs
    rpc DefaultAssets(DefaultAssets.Request) returns (DefaultAssets.Response);
}

message PluginQuestion {
    string name = 1;
    string prompt = 2;
    string help = 3;
    string default = 4;
    repeated string multiselect = 5;

    message SubQuestion {
        string if_value = 1;
        repeated PluginQuestion questions = 2;
    }
    repeated SubQuestion sub_questions = 6;
}

message PluginAnswer {
    PluginQuestion question = 1;
    string value = 2;
}

message GetQuestions {
    message Request {
        string job_name = 1;
        PluginOptions options = 40;
    }
    message Response {
        repeated PluginQuestion questions = 1;
    }
}

message ValidateQuestion {
    message Request {
        PluginAnswer answer = 1;

        PluginOptions options = 40;
    }
    message Response {
        bool success = 1;
        string error = 2;
    }
}

message Configs {
    message Config {
        string name = 1;
        string value = 2;
    }
    repeated Config configs = 1;
}

message DefaultConfig {
    message Request {
        repeated PluginAnswer answers = 1;
        Configs parent_configs = 2;

        PluginOptions options = 40;
    }
    message Response {
        Configs config = 1;
    }
}

message Assets {
    message Asset{
        string name = 1;
        string value = 2;
    }
    repeated Asset assets = 1;
}

message DefaultAssets {
    message Request {
        repeated PluginAnswer answers = 1;
        Configs parent_configs = 2;

        PluginOptions options = 40;
    }
    message Response {
        Assets assets = 1;
    }
}